// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SupermercadoAPI.Data;

#nullable disable

namespace SupermercadoAPI.Migrations
{
    [DbContext(typeof(SupermercadoContext))]
    [Migration("20250921194429_InicialCreacion")]
    partial class InicialCreacion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SupermercadoAPI.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activa")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique()
                        .HasDatabaseName("IX_Categoria_Nombre");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activa = true,
                            Descripcion = "Productos lácteos y derivados",
                            FechaCreacion = new DateTime(2025, 9, 21, 16, 44, 27, 777, DateTimeKind.Local).AddTicks(1282),
                            Nombre = "Lácteos"
                        },
                        new
                        {
                            Id = 2,
                            Activa = true,
                            Descripcion = "Carnes rojas, blancas y embutidos",
                            FechaCreacion = new DateTime(2025, 9, 21, 16, 44, 27, 777, DateTimeKind.Local).AddTicks(1306),
                            Nombre = "Carnes"
                        },
                        new
                        {
                            Id = 3,
                            Activa = true,
                            Descripcion = "Productos frescos",
                            FechaCreacion = new DateTime(2025, 9, 21, 16, 44, 27, 777, DateTimeKind.Local).AddTicks(1310),
                            Nombre = "Frutas y Verduras"
                        },
                        new
                        {
                            Id = 4,
                            Activa = true,
                            Descripcion = "Bebidas alcohólicas y no alcohólicas",
                            FechaCreacion = new DateTime(2025, 9, 21, 16, 44, 27, 777, DateTimeKind.Local).AddTicks(1312),
                            Nombre = "Bebidas"
                        },
                        new
                        {
                            Id = 5,
                            Activa = true,
                            Descripcion = "Pan y productos de panadería",
                            FechaCreacion = new DateTime(2025, 9, 21, 16, 44, 27, 777, DateTimeKind.Local).AddTicks(1315),
                            Nombre = "Panadería"
                        });
                });

            modelBuilder.Entity("SupermercadoAPI.Models.HistorialStock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Motivo")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<decimal?>("PrecioUnitario")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<string>("TipoMovimiento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("HistorialStock");
                });

            modelBuilder.Entity("SupermercadoAPI.Models.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("ProveedorId")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("ProveedorId");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("SupermercadoAPI.Models.Proveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Direccion")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Proveedores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            Direccion = "Av. España 1234, Asunción",
                            Email = "ventas@lacteosvalle.com",
                            FechaCreacion = new DateTime(2025, 9, 21, 16, 44, 27, 777, DateTimeKind.Local).AddTicks(1730),
                            Nombre = "Lácteos del Valle S.A.",
                            Telefono = "0981-123456"
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            Direccion = "Ruta 1 Km 25, San Lorenzo",
                            Email = "pedidos@frigorifico.com",
                            FechaCreacion = new DateTime(2025, 9, 21, 16, 44, 27, 777, DateTimeKind.Local).AddTicks(1740),
                            Nombre = "Frigorífico Central",
                            Telefono = "0982-789012"
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            Direccion = "Mercado Central, Local 45",
                            Email = "info@frutasfrescas.com",
                            FechaCreacion = new DateTime(2025, 9, 21, 16, 44, 27, 777, DateTimeKind.Local).AddTicks(1744),
                            Nombre = "Distribuidora Frutas Frescas",
                            Telefono = "0983-345678"
                        });
                });

            modelBuilder.Entity("SupermercadoAPI.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("IX_Usuario_Email");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            Email = "admin@supermercado.com",
                            FechaCreacion = new DateTime(2025, 9, 21, 16, 44, 28, 8, DateTimeKind.Local).AddTicks(5072),
                            Nombre = "Administrador",
                            Password = "$2a$11$fWbH7mh4cQ2XYcm72oLoJ.uEzdtE3avnUbDJN3MmdtW2h8be3hZNu",
                            Rol = "Admin"
                        });
                });

            modelBuilder.Entity("SupermercadoAPI.Models.HistorialStock", b =>
                {
                    b.HasOne("SupermercadoAPI.Models.Producto", "Producto")
                        .WithMany("HistorialStock")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SupermercadoAPI.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SupermercadoAPI.Models.Producto", b =>
                {
                    b.HasOne("SupermercadoAPI.Models.Categoria", "Categoria")
                        .WithMany("Productos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SupermercadoAPI.Models.Proveedor", "Proveedor")
                        .WithMany("Productos")
                        .HasForeignKey("ProveedorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("SupermercadoAPI.Models.Categoria", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("SupermercadoAPI.Models.Producto", b =>
                {
                    b.Navigation("HistorialStock");
                });

            modelBuilder.Entity("SupermercadoAPI.Models.Proveedor", b =>
                {
                    b.Navigation("Productos");
                });
#pragma warning restore 612, 618
        }
    }
}
